version: "3.8"

services:
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: shop
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shop"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  migrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: migrator
    depends_on:
      db:
        condition: service_healthy
    environment:
      CONFIG_PATH: /app/config/local.yaml
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    command: ["/app/migrator", "-migrations-path=/app/migrations"]
    networks:
      - internal

  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server
    depends_on:
      db:
        condition: service_healthy
    environment:
      CONFIG_PATH: /app/config/local.yaml
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    command: [ "/app/server" ]
    ports:
      - "8080:8080"
    networks:
      - internal

volumes:
  postgres_data:
networks:
  internal:
    driver: bridge